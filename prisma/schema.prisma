generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Owner {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  partners  Partner[]
  createdAt DateTime  @default(now())
}

model Partner {
  id        String    @id @default(cuid())
  name      String
  ownerId   String
  owner     Owner     @relation(fields: [ownerId], references: [id])
  points    Point[]
}

model Point {
  id        String     @id @default(cuid())
  name      String
  partnerId String
  partner   Partner    @relation(fields: [partnerId], references: [id])
  employees Employee[]
}

model Employee {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  role      UserRole @default(EMPLOYEE)
  pointId   String?
  point     Point?   @relation(fields: [pointId], references: [id])
  createdAt DateTime @default(now())
}

enum UserRole {
  OWNER
  PARTNER
  POINT
  EMPLOYEE
}

model Page {
  id          String           @id @default(cuid())
  title       String
  path        String           @unique
  description String?
  content     String?          @default("")
  isActive    Boolean          @default(true)
  order       Int              @default(0)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  permissions RolePermission[]
}

model MenuItem {
  id          String                 @id @default(cuid())
  title       String
  icon        String?                @default("")
  path        String                 @unique
  description String?
  type        String                 @default("horizontal")
  isActive    Boolean                @default(true)
  order       Int                    @default(0)
  parentId    String?
  createdAt   DateTime               @default(now())
  updatedAt   DateTime               @updatedAt
  parent      MenuItem?              @relation("MenuHierarchy", fields: [parentId], references: [id])
  children    MenuItem[]             @relation("MenuHierarchy")
}



model RolePermission {
  id        String   @id @default(cuid())
  role      String
  pageId    String
  canAccess Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  page      Page     @relation(fields: [pageId], references: [id], onDelete: Cascade)

  @@unique([role, pageId])
}
